diff --git a/config/BUILDCONFIG.gn b/config/BUILDCONFIG.gn
index 29625fa..2d9ac3e 100644
--- a/config/BUILDCONFIG.gn
+++ b/config/BUILDCONFIG.gn
@@ -274,6 +274,8 @@ if (target_os == "android") {
   _default_toolchain = "//build/toolchain/aix:$target_cpu"
 } else if (target_os == "zos") {
   _default_toolchain = "//build/toolchain/zos:$target_cpu"
+} else if (target_os == "wasm") {
+  _default_toolchain = "//build/toolchain/wasm:emscripten"
 } else {
   assert(false, "Unsupported target_os: $target_os")
 }
@@ -310,6 +312,7 @@ is_fuchsia = current_os == "fuchsia"
 is_ios = current_os == "ios"
 is_linux = current_os == "linux"
 is_mac = current_os == "mac"
+is_wasm = current_os == "wasm"
 is_nacl = current_os == "nacl"
 is_win = current_os == "win" || current_os == "winuwp"
 
diff --git a/config/compiler/BUILD.gn b/config/compiler/BUILD.gn
index fd2b10d..c3630b6 100644
--- a/config/compiler/BUILD.gn
+++ b/config/compiler/BUILD.gn
@@ -293,6 +293,8 @@ config("compiler") {
     configs += [ "//build/config/nacl:compiler" ]
   } else if (is_mac) {
     configs += [ "//build/config/mac:compiler" ]
+  } else if (current_os == "wasm") {
+    configs += [ "//build/config/wasm:compiler" ]
   } else if (is_ios) {
     configs += [ "//build/config/ios:compiler" ]
   } else if (is_fuchsia) {
@@ -423,7 +425,7 @@ config("compiler") {
       # compute, so only use it in the official build to avoid slowing down
       # links.
       ldflags += [ "-Wl,--build-id=sha1" ]
-    } else if (current_os != "aix" && current_os != "zos") {
+    } else if (current_os != "aix" && current_os != "zos" && current_os != "wasm") {
       if (use_lld && !is_nacl) {
         ldflags += [ "-Wl,--build-id=fast" ]
       } else {
@@ -2350,7 +2352,7 @@ if (is_win) {
         "-Wl,-no_function_starts",
       ]
     }
-  } else if (current_os != "aix" && current_os != "zos") {
+  } else if (current_os != "aix" && current_os != "zos" && current_os != "wasm") {
     # Non-Mac Posix flags.
     # Aix does not support these.
 
diff --git a/config/wasm/BUILD.gn b/config/wasm/BUILD.gn
new file mode 100644
index 0000000..9d931ff
--- /dev/null
+++ b/config/wasm/BUILD.gn
@@ -0,0 +1,7 @@
+config("compiler") {
+  defines = [
+    # Enable fseeko() and ftello() (required by libopenjpeg20)
+    # https://github.com/emscripten-core/emscripten/issues/4932
+    "_POSIX_C_SOURCE=200112",
+  ]
+}
\ No newline at end of file
diff --git a/toolchain/toolchain.gni b/toolchain/toolchain.gni
index 14aa5f7..7ff45c4 100644
--- a/toolchain/toolchain.gni
+++ b/toolchain/toolchain.gni
@@ -58,6 +58,8 @@ if (is_apple) {
   shlib_extension = ".so"
 } else if (is_win) {
   shlib_extension = ".dll"
+} else if (is_wasm) {
+  shlib_extension = ".so"
 } else {
   assert(false, "Platform not supported")
 }
diff --git a/toolchain/wasm/BUILD.gn b/toolchain/wasm/BUILD.gn
new file mode 100644
index 0000000..e90ff61
--- /dev/null
+++ b/toolchain/wasm/BUILD.gn
@@ -0,0 +1,19 @@
+import("//build/toolchain/gcc_toolchain.gni")
+
+gcc_toolchain("emscripten") {
+  cc = "emcc"
+  cxx = "em++"
+
+  readelf = "llvm-readobj"
+  ar = "emar"
+  ld = cxx
+  nm = "emnm"
+
+  extra_cflags = "-Wno-unknown-warning-option"
+  extra_cxxflags = "-Wno-unknown-warning-option"
+
+  toolchain_args = {
+    current_cpu = "wasm"
+    current_os = "wasm"
+  }
+}
\ No newline at end of file
